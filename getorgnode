#!/usr/bin/env bash

show_locate=0

if [ "$1" = "--locate" ]; then
  show_locate=1
  shift
fi

if [ -z "$1" ]; then
  echo "Usage: $0 [--locate] ORG_ID"
  exit 1
fi

org_id="$1"

elisp="
(let ((node (org-roam-node-from-id \"$org_id\")))
  (if node
      (with-current-buffer (find-file-noselect (org-roam-node-file node))
        (save-excursion
          (goto-char (org-roam-node-point node))
          (let ((start (line-number-at-pos (point))))
            (org-end-of-subtree t t)
            (let ((end (line-number-at-pos (point))))
              (princ (format \"%s\n%d\n%d\"
                             (expand-file-name (org-roam-node-file node))
                             start
                             end))))))
    (princ \"ID not found\")))
"

result="$(emacsclient --eval "$elisp" | sed -e 's/^"//' -e 's/"$//' | perl -pe 's/\\n/\n/g')"

if echo "$result" | grep -q "^ID not found$"; then
  echo "ID not found"
  exit 1
fi

if [ "$show_locate" -eq 1 ]; then
  echo "$result"
else
  # Parse file, start, end from result
  file=$(echo "$result" | sed -n '1p')
  start=$(echo "$result" | sed -n '2p')
  end=$(echo "$result" | sed -n '3p')
  sed -n "${start},${end}p" "$file"
fi
