#!/usr/bin/env bash

# noteby - Crete notes on the clocked task via CLI

author="$1"
markdownText="$2"

if [ -z "$author" ] || [ -z "$markdownText" ]; then
  echo "Usage: $0 AUTHOR MULTI_LINE_MARKDOWN"
  exit 1
fi

orgMode="$(pandoc -f markdown -t org <<<"$markdownText")"
note="noteby: =$author=
$orgMode"

noteEscaped=$(sed 's/\\/\\\\/g; s/"/\\"/g; s/\n/\\n/g' <<<"$note")

if [ -z "$noteEscaped" ]; then
  echo "Error: Note is empty after processing."
  exit 1
fi

# Process:
# - Receives the author and Org Mode text as arguments
# - Retrieves the current clocked task
# - If no task is clocked, it exits
# - If a task is clocked, add a note with org-store-log-note, respecting org-add-note configs
# - Saves the buffer containing the clocked task

elisp="
(let* ((note \"${noteEscaped}\"))
  (if (org-clocking-p)
      (let ((prev-buffer (current-buffer)))
        (with-current-buffer (marker-buffer org-clock-marker)
          (save-excursion
            (goto-char org-clock-marker)
            (org-back-to-heading t)
            ;; Setup org's note system
            (org-add-log-setup 'note)
            ;; Create the *Org Note* buffer and finish
            (org-add-log-note)
            ;; Insert note into *Org Note* buffer and finish
            (with-current-buffer \"*Org Note*\"
              (erase-buffer)
              (insert note)
              (org-store-log-note))
            (message \"[noteby-emacs] calling save-buffer\")
            (save-buffer))))
    (message \"[noteby-emacs] No task is currently clocked in.\")))
"

emacsclient --eval "$elisp" >/dev/null 2>&1
if [ $? -ne 0 ]; then
  echo "Error: Failed to execute Emacs client command."
  exit 1
fi

echo "Note added successfully."
