#+title: Small Bash Scripts

* Available scripts
#+begin_src bash :results raw :exports both
fd -t f . | while read -r file; do
  [[ "$file" =~ \.org$ ]] && continue
  header=$(grep -m1 "^# .\+ - .\+" "$file" || echo "# $file - /No description yet/")
  # Remove '# ' and split
  data="${header#\# }"
  basename="${file##*/}"
  description="${data#*- }"
  echo "- [[file:./$basename][$basename]] :: $description"
done
#+end_src

#+RESULTS:
- [[file:./aideradvprreview][aideradvprreview]] :: Advanced PR review script using Aider
- [[file:./aidercommit][aidercommit]] :: Script to commit with a generated message
- [[file:./aideronpane][aideronpane]] :: This script captures the contents of the current tmux pane and opens a popup with Aider allowing you to chat about the pane contents.
- [[file:./aiderreviewpr][aiderreviewpr]] :: Script to review a pull request (git branch) using Aider
- [[file:./caststats.nim][caststats.nim]] :: Script that raises some interesting stats from a asciicast.
- [[file:./catclipimg][catclipimg]] :: Prints clipboard image as ansi in terminal using ~chafa~.
- [[file:./catscr][catscr]] :: Prints the screen screenshot as text in the terminal
- [[file:./clipimg][clipimg]] :: Dead simple alias to get image from clipboard
- [[file:./clipqr][clipqr]] :: Decodes clipboard QR code image to text
- [[file:./contextualize][contextualize]] :: Provides relevant context for LLM CLI tools, mainly with Aider.
- [[file:./curtask][curtask]] :: A script to display the Org clocked task from Emacs in the stdout
- [[file:./epub2org][epub2org]] :: Unpacks EPUB, recurse its HTML files and packs into a single Org file.
- [[file:./file-bps][file-bps]] :: Prints file bytes in a pretty format for each second
- [[file:./files-per-sec][files-per-sec]] :: Prints the directory files count for each second
- [[file:./getorgnode][getorgnode]] :: Get Org Node by ID via CLI
- [[file:./gistclip][gistclip]] :: Create a GitHub Gist from a file path in the clipboard
- [[file:./git-file-versions][git-file-versions]] :: Dumps all revisions of a Git tracked file into =/tmp/all_versions_exported=
- [[file:./git-gc][git-gc]] :: Convenience script for =git gc= with a size comparison from before and after the GC.
- [[file:./git-set-branch-to-hostname][git-set-branch-to-hostname]] :: Sets the branch of the current Git repo to the system hostname
- [[file:./git-sync-repos][git-sync-repos]] :: Pushes the repos that contains =vf= origin following the directory rule.
- [[file:./noteby][noteby]] :: Crete notes on the clocked task via CLI
- [[file:./nsla][nsla]] :: traNSLAte: Libre Translate CLI client
- [[file:./ocrclipimg][ocrclipimg]] :: Alias to get text from clipboard image using Tesseract OCR
- [[file:./panecontent][panecontent]] :: Script that prints the tmux pane contents into stdout through a pane selection menu via gum
- [[file:./recact][recact]] :: Intention driven terminal session recordings
- [[file:./recaction][recaction]] :: Convenience script for calling ~recact~
- [[file:./recloop][recloop]] :: Waits RET to record a session on a specific command, execute a post script and loops it again
- [[file:./resolveenv][resolveenv]] :: Preprocess a .env file by resolving pass calls.
- [[file:./restclient][restclient]] :: Runs Emacs restclient.el from CLI
- [[file:./site2org][site2org]] :: Fetches a HTML page with ~wget~ and converts into Org with ~pandoc~.
- [[file:./termshot][termshot]] :: Dumps current ~tmux~ pane and pipes into ~freeze~. Tip: Use a keybind.
- [[file:./txtfix][txtfix]] :: Translate to a language then translate it back to "fix" the text using Libre Translate
- [[file:./wk8s][wk8s]] :: Use a kubeconfig from ~pass~
- [[file:./zerolog][zerolog]] :: Format zerolog JSON output with jq and highlight the non-JSON parts (generally the uncaught errors)
