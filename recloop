#!/usr/bin/env bash

# Script that waits RET to record a session on a specific command,
# execute an post script and loops it again

timestampsFile="timestamps.jsonl"

command="$1"
postCommand="$2"
if [[ ! -n "$command" ]] || [[ ! -n "$postCommand" ]]; then
  echo "Usage: recloop COMMAND POST_COMMAND"
  exit 1
fi

# Ensure the right git branch
git-set-branch-to-hostname

while true; do
  echo "Press RET to start"
  read wait

  castDir="$(date '+%Y%m%d')"
  test -d "$castDir" || mkdir "$castDir"

  startEpoch="$(date '+%s')"
  castFile="$castDir/$startEpoch.cast"

  # Start asciinema recording
  time asciinema rec "$castFile" -c "$command" --stdin

  endEpoch="$(date '+%s')"

  # Save session state to file
  jq -nc --arg start "$startEpoch" --arg end "$endEpoch" \
    '{start: $start, end: $end }' >>"$timestampsFile"

  caststats.nim "$castFile"

  # Commit
  git add "$castFile" "$timestampsFile"
  git commit -m 'chore(tracks): add session'

  # Delete the cast file to clean up
  rm "$castFile"

  # Post
  echo "Executing post command"
  bash -c "$postCommand"

  echo "Done"
done
