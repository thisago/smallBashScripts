#!/usr/bin/env bash

# Script that waits RET to record a session on a specific command,
# execute an post script and loops it again

timestampsFile="timestamps.jsonl"
currentSessionTmpFile=~/session.json

intentionSummary="$1"
expectedDuration="$2"
command="$3"
postCommand="$4"
if ! test -n "$intentionSummary" || ! test -n "$expectedDuration" || ! test -n "$command" || ! test -n "$postCommand"; then
  echo "Usage: recloop INTENTION_SUMMARY EXPECTED_DURATION COMMAND POST_COMMAND"
  exit 1
fi

# Checks
# Duration is number
if [[ "$(echo "$expectedDuration" | bc 2>/dev/null)" != "$expectedDuration" ]]; then
  echo "Input should be a number"
  exit 1
fi
# Check if the directory is a git repository
if ! git rev-parse --is-inside-work-tree &>/dev/null; then
  echo "This script should be run inside a git repository."
  exit 1
fi

# Ensure the right git branch
git-set-branch-to-hostname

while true; do
  echo "Press RET to start with the written message"
  read message

  castDir="$(date '+%Y%m%d')"
  test -d "$castDir" || mkdir "$castDir"

  startEpoch="$(date '+%s')"
  castFile="$castDir/$startEpoch.cast"

  # Save session state to file
  jq -nc \
    --arg startTime "$startEpoch" \
    --arg pretend "$intentionSummary" \
    --arg duration "$expectedDuration" \
    --arg castFile "$castFile" \
    '{
       start: $startTime,
       pretend: $pretend,
       expectedDuration: $duration,
       stdin: true,
       castFile: $castFile
     }' >"$currentSessionTmpFile"

  # Start asciinema recording
  time asciinema rec "$castFile" -c "$command" --stdin

  endEpoch="$(date '+%s')"

  # Save session state to file
  jq -nc --arg start "$startEpoch" --arg end "$endEpoch" --arg msg "$message" \
    '{start: $start, end: $end, message: $msg }' >>"$timestampsFile"

  castStats="$(caststats.nim "$castFile")"
  jq <<<"$castStats"
  du -sh "$castFile"

  # Commit
  git add "$castFile" "$timestampsFile"
  git commit -m 'chore(tracks): add session' -m "$castStats"

  # Delete the cast file to clean up
  rm "$castFile"
  rm "$currentSessionTmpFile"

  # Post
  echo "Executing post command"
  bash -c "$postCommand"

  echo "Done"
done
